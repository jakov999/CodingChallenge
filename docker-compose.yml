name: codingchallenge
services:
  backend:
    build:
      context: .
      dockerfile: backend/CodingChallenge/Dockerfile
    depends_on:
      - sqlserver
    environment:
      - ConnectionStrings__DefaultConnection:"Server=sqlserver,1433;Database=CodingChallenge;User Id=sa;Password=Str0ngPassword123!;TrustServerCertificate=True"
    networks:
      - app-network
    ports:
      - "5000:80"  # Map port 5000 to backend's port 80
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "backend"
  frontend:
    build:
      context: ./frontend-app  # Relative path for frontend
      dockerfile: Dockerfile
    environment:
      - VITE_BACKEND_URL=http://backend:5000/api  # Use Docker service name for backend communication
    networks:
      - app-network
    ports:
      - "3000:80"  # Map port 3000 to frontend's port 80
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "backend"
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - SA_PASSWORD=Str0ngPassword123!    # Korisničko ime
      - MSSQL_DATABASE=CodingChallenge  # Ime baze podataka (opciono)
      - MSSQL_INSTANCE_NAME=your_instance # Ime instance (opciono)
    ports:
      - "1455:1433" # Ovaj port možete promeniti u zavisnosti od potreba
    volumes:
      - sql_data:/var/opt/mssql
  # Persistent data volume for SQL Server

networks:
  app-network:
    name: codingchallenge_app-network

volumes:
  sql_data:
    driver: local
